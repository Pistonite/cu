[package]
name = "pistonite-cu"
version = "0.5.1"
edition = "2024"
description = "Battery-included common utils to speed up development of rust tools"
repository = "https://github.com/Pistonite/cu"
license = "MIT"
authors = ["Pistonight <pistonknight@outlook.com>"]
exclude = [
    "Taskfile.yml"
]

[dependencies]
pistonite-cu-proc-macros = { version = "0.1.2", path = "../copper-proc-macros", optional = true }

anyhow = "1.0.99"
log = "0.4.27"
oneshot = "0.1.11"

# printing/cli
env_filter = { version = "0.1.3", optional = true }
terminal_size = { version = "0.4.3", optional = true }
unicode-width = { version = "0.2.1", features = ["cjk"], optional = true }
clap = { version = "4.5.45", features = ["derive"], optional = true }
regex = { version = "1.11.1", optional = true }

# fs
dunce = {version="1.0.5", optional = true}
which = {version = "8.0.0", optional = true }
pathdiff = {version = "0.2.3", optional=true}
spin = {version = "0.10.0", optional = true}
filetime = { version = "0.2.25", optional = true}
glob = { version = "0.3.3", optional = true }

# serde
serde = { version = "1.0.219", features = ["derive"], optional = true }
serde_json = { version = "1.0.142", optional = true }
serde_yaml_ng = { version = "0.10.0", optional = true }
toml = { version = "0.9.5", optional = true }

# derive
derive_more = { version = "2.0.1", features = ["full"], optional = true }

# coroutine
num_cpus = { version = "1.17.0", optional = true }
[dependencies.tokio]
version = "1.47.1" 
features = [ "macros", "rt-multi-thread" ]
optional = true
[dev-dependencies.tokio]
version = "1.47.1" 
features = [ "macros", "rt-multi-thread", "time" ]

[features]
default = []
full = [
    "coroutine-heavy",
    "cli",
    "prompt",
    "process",
    "json",
    "yaml",
    "toml",
    "derive",
]

# Command Line Interface (enables integration with `clap` and command line entry points)
cli = ["dep:clap", "dep:pistonite-cu-proc-macros", "print"]
print = ["dep:regex", "dep:env_filter", "dep:terminal_size", "dep:unicode-width"]
# Utils to show prompt for user input in terminal
prompt = ["print"]
# Enable coroutine drivers, which allow interop with async
coroutine = [
    "dep:tokio", "dep:num_cpus",
    "tokio/sync", "tokio/io-util", "tokio/io-std"
]
# Enable heavy coroutine drived by multi-threaded tokio runtime
coroutine-heavy = ["coroutine"]
# Enable spawning child processes
process = [
    "coroutine", "fs",
    "dep:spin",
    "tokio/process"
]
# Enable file system and path util
fs = [
    "dep:which", "dep:pathdiff", "dep:dunce", "dep:filetime", "dep:glob",
    "tokio?/fs"
]
# Enable parsing utils
parse = ["dep:pistonite-cu-proc-macros"]
serde = ["dep:serde"]
json = ["parse", "serde", "dep:serde_json"]
json-preserve-order = ["json", "serde_json/preserve_order"]
yaml = ["parse", "serde", "dep:serde_yaml_ng"]
toml = ["parse", "serde", "dep:toml"]
toml-preserve-order = ["toml", "toml/preserve_order"]

# Internally used to document where nightly feature is used
# (in particular, doc_cfg)
nightly = []

# Static (compile-time) logging toggles
release-nolog= ["log/release_max_level_off"]
release-nodebuglog = ["log/release_max_level_info"]
derive = ["dep:derive_more"]

[[example]]
name = "print"
required-features = ["prompt", "cli"]

[[example]]
name = "process"
required-features = ["prompt", "cli", "process"]

[[example]]
name = "walk"
required-features = ["fs", "cli"]

[[example]]
name = "cargo"
required-features = ["process", "cli", "json"]
